// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


function makeOperationString(param) {
  switch (param) {
    case /* SignUp */0 :
        return "SignUp";
    case /* SignIn */1 :
        return "SignIn";
    case /* SignOut */2 :
        return "SignOut";
    case /* ConfirmSignUp */3 :
        return "ConfirmSignUp";
    case /* ChangePassword */4 :
        return "ChangePassword";
    case /* RespondToAuthChallenge */5 :
        return "RespondToAuthChallenge";
    case /* ForgotPassword */6 :
        return "ForgotPassword";
    case /* ConfirmForgotPassword */7 :
        return "ConfirmForgotPassword";
    case /* InitiateAuth */8 :
        return "InitiateAuth";
    
  }
}

function makeRegionString(param) {
  switch (param) {
    case /* UsEast1 */0 :
        return "us-east-1";
    case /* UsEast2 */1 :
        return "us-east-2";
    case /* UsWest2 */2 :
        return "us-west-2";
    case /* ApSouth1 */3 :
        return "ap-south-1";
    case /* ApNortheast1 */4 :
    case /* ApNortheast2 */5 :
        return "ap-northeast-2";
    case /* ApSoutheast1 */6 :
        return "ap-southeast-1";
    case /* ApSoutheast2 */7 :
        return "ap-southeast-2";
    case /* CaCentral1 */8 :
        return "ca-central-1";
    case /* EuCentral1 */9 :
        return "eu-central-1";
    case /* EuWest1 */10 :
        return "eu-west-1";
    case /* EuWest2 */11 :
        return "eu-west-2";
    
  }
}

function makeSignupErrorVariant(param) {
  var msg = param[/* message */1];
  switch (param[/* __type */0]) {
    case "CodeDeliveryFailureException" :
        return /* `CognitoCodeDeliveryFailure */[
                307717752,
                msg
              ];
    case "InternalErrorException" :
        return /* `CognitoInternalError */[
                636052602,
                msg
              ];
    case "InvalidEmailRoleAccessPolicyException" :
        return /* `CognitoInvalidEmailRoleAccessPolicy */[
                -320011326,
                msg
              ];
    case "InvalidLambdaResponseException" :
        return /* `CognitoInvalidLambdaResponse */[
                -1072578002,
                msg
              ];
    case "InvalidParameterException" :
        return /* `CognitoInvalidParameter */[
                -267133469,
                msg
              ];
    case "InvalidPasswordException" :
        return /* `CognitoInvalidPassword */[
                -17702879,
                msg
              ];
    case "InvalidSmsRoleAccessPolicysException" :
        return /* `CognitoInvalidSmsRoleAccessPolicys */[
                598714580,
                msg
              ];
    case "InvalidSmsRoleTrustRelationshipException" :
        return /* `CognitoInvalidSmsRoleTrustRelationship */[
                -198400121,
                msg
              ];
    case "NotAuthorizedException" :
        return /* `CognitoNotAuthorized */[
                -1019683139,
                msg
              ];
    case "ResourceNotFoundException" :
        return /* `CognitoResourceNotFound */[
                281060686,
                msg
              ];
    case "TooManyRequestsException" :
        return /* `CognitoTooManyRequests */[
                165203366,
                msg
              ];
    case "UnexpectedLambdaException" :
        return /* `CognitoUnexpectedLambda */[
                -539579927,
                msg
              ];
    case "UserLambdaValidationException" :
        return /* `CognitoUserLambdaValidation */[
                1019055420,
                msg
              ];
    case "UsernameExistsException" :
        return /* `CognitoUsernameExists */[
                -157849469,
                msg
              ];
    default:
      return /* `CognitoUnknownError */[
              -55570033,
              msg
            ];
  }
}

function makeConfirmError(err, msg) {
  switch (err) {
    case "AliasExistsException" :
        return /* `CognitoAliasExists */[
                -498244869,
                msg
              ];
    case "CodeMismatchException" :
        return /* `CognitoCodeMismatch */[
                -817363892,
                msg
              ];
    case "ExpiredCodeException" :
        return /* `CognitoExpiredCode */[
                -64788767,
                msg
              ];
    case "InternalErrorException" :
        return /* `CognitoInternalError */[
                636052602,
                msg
              ];
    case "InvalidLambdaResponseException" :
        return /* `CognitoInvalidLambda */[
                -469073267,
                msg
              ];
    case "InvalidParameterException" :
        return /* `CognitoInvalidParameter */[
                -267133469,
                msg
              ];
    case "LimitExceededException" :
        return /* `CognitoLimitExceeded */[
                767083101,
                msg
              ];
    case "NotAuthorizedException" :
        return /* `CognitoNotAuthorized */[
                -1019683139,
                msg
              ];
    case "ResourceNotFoundException" :
        return /* `CognitoResourceNotFound */[
                281060686,
                msg
              ];
    case "TooManyFailedAttemptsException" :
        return /* `CognitoTooManyFailedAttempts */[
                261105285,
                msg
              ];
    case "TooManyRequestsException" :
        return /* `CognitoTooManyRequests */[
                165203366,
                msg
              ];
    case "UnexpectedLambdaException" :
        return /* `CognitoUnexpectedLambda */[
                -539579927,
                msg
              ];
    case "UserLambdaValidationException" :
        return /* `CognitoUserLambdaValidation */[
                1019055420,
                msg
              ];
    case "UserNotFoundException" :
        return /* `CognitoUserNotFound */[
                376697675,
                msg
              ];
    default:
      return /* `CognitoUnknownError */[
              -55570033,
              msg
            ];
  }
}

exports.makeOperationString = makeOperationString;
exports.makeRegionString = makeRegionString;
exports.makeSignupErrorVariant = makeSignupErrorVariant;
exports.makeConfirmError = makeConfirmError;
/* No side effect */
